name: v3 build

on:
  push:
    branches:
      - master
    tags:
      - "3.*.*"
  pull_request:
    branches:
      - master
  workflow_dispatch:
    branches:
      - master

jobs:

  build-code:
    name: Build code
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Build frontend
        run: |
          npm --prefix=./frontend i
          UPSNAP_VERSION=${GITHUB_REF##*/} npm --prefix=./frontend run build
          cp -r ./frontend/build/* ./backend/pb_public/

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.20"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-test-image:
    name: Build Image for Scanning & Testing
    needs: [build-code]
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/seriousm4x/UpSnap
          tags: |
            type=ref,event=${{ github.run_id }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GHCR
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            VERSION=${{github.ref_name}}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  scan-image:
      name: Scan Image with Trivy
      needs: [build-test-image]
      runs-on: ubuntu-latest

      permissions:
        contents: read
        packages: read
        security-events: write

      steps:

        - name: Checkout git repo
          uses: actions/checkout@v3
        
        - name: Login to ghcr.io registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Pull image to scan
          run: docker pull ghcr.io/seriousm4x/UpSnap:"$GITHUB_RUN_ID"

        - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ghcr.io/seriousm4x/UpSnap:${{ github.run_id }}
            exit-code: 0
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'HIGH,CRITICAL'
            format: 'sarif'
            output: 'results.sarif'

        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: results.sarif
            category: results

  test-image:
      name: Test image with Docker Compose
      needs: [build-test-image]
      runs-on: ubuntu-latest

      permissions:
        packages: read

      steps:

        - name: Checkout git repo
          uses: actions/checkout@v3

        - name: Login to ghcr.io registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        # TODO - Add smoke test later, I've got a good boiler plate exemple for this
        - name: Pull image to scan
          run: echo "TODO - Add smoke test later"

  build-and-push-image:
    name: Build and Push Image
    needs: [scan-image, test-image]
    runs-on: ubuntu-latest

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/seriousm4x/UpSnap
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            VERSION=${{github.ref_name}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v7
